buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url = "https://files.minecraftforge.net/maven"
            name = "Forge"
        }
        maven {
            url = "https://maven.fabricmc.net/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:3.+"
        classpath "net.fabricmc:fabric-loom:0.2.7-SNAPSHOT"
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'

subprojects {
    apply plugin: 'java-library'
    version = ''

    targetCompatibility = JavaVersion.VERSION_1_8
    sourceCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

if (release.toUpperCase() != "RELEASE")
    version += "-$release"

description = project.displayname

evaluationDependsOnChildren()

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    compile "org.apache.httpcomponents:httpmime:4.3.2"
}

sourceSets {
    old {
//        java.srcDir "oldSrc/main/java"
        resources.srcDir "oldSrc/main/resources"
    }
}

jar {
    dependsOn project("common").shadowJar
    from(zipTree(project("common").shadowJar.outputs.files.singleFile)) {
        exclude 'fabric.mod.json'
    }
    dependsOn project("forge").reobfJar
    from zipTree(project("forge").jar.outputs.files.singleFile)
    dependsOn project("fabric").remapJar
    from zipTree(project("fabric").remapJar.outputs.files.singleFile)

    from 'LICENSE'

    manifest.attributes(
            "Specification-Title": project.name,
            "Specification-Version": project.version,
            "Specification-Vendor": "MineLittlePony",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor": "MineLittlePony",
            "Implementation-Timestamp": new Date()
    )
}

task commonJar(type: Jar) {
    archiveClassifier = 'common'

    dependsOn project("common").jar
    from(zipTree(project("common").jar.outputs.files.singleFile)) {
        exclude 'fabric.mod.json'
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from project('common').sourceSets.main.java
    from project('fabric').sourceSets.main.java
    from project('forge').sourceSets.main.java
}

artifacts {
    archives commonJar, sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact commonJar
            pom {
                name = "HDSkins"
                description = "HD Skins support for Minecraft"
                url = "https://minelittlepony-mod.com"

                licenses {
                    license {
                        name = "MIT Public License"
                        url = "https://tlo.mit.edu/learn-about-intellectual-property/software-and-open-source-licensing"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/MineLittlePony/HDSkins.git'
                    developerConnection = 'scm:git:ssh://github.com/MineLittlePony/HDSkins.git'
                    url = 'https://github.com/MineLittlePony/HDSkins'
                }
            }
        }

    }
    repositories {
        mavenLocal()
    }
}
